# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
{ lib, pkgs, modulesPath, config, ... }: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
    #     (inputs.nixos-hardware.nixosModules.lenovo-thinkpad-t495)
    #     (../../nixconfig/mediakeys.nix)
  ];

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "24.11"; # Did you read the comment?

  # fingerprint reader
  # fprintd-enroll
  #   services.fprintd.enable = true;

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.consoleLogLevel = 3;
  #  boot.initrd.verbose = false;

  # Add kernel parameters to fix ACPI BIOS errors and USB issues
  boot.kernelParams = [ ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/ac6b549c-692f-4cf0-a1b5-caf81f663de2";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-5aaa0ace-fb00-41a0-b417-bdca099d72f9".device = "/dev/disk/by-uuid/5aaa0ace-fb00-41a0-b417-bdca099d72f9";

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/B71E-ED70";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices = [ ];

  services.xserver.videoDrivers = [ "nvidia" "amdgpu" ];
  # services.xserver.videoDrivers = [ "amdgpu" ]; # amdgpu{-pro}, modesetting, radeon ];
  hardware.cpu.amd.updateMicrocode = true;

  hardware.nvidia = {
    open = true;
    modesetting.enable = true;
    nvidiaSettings = true;
    package = config.boot.kernelPackages.nvidiaPackages.latest; # stable 
    prime = {
      offload.enable = true;
      # offload.enableOffloadCmd = true;
      # sync.enable = true;
      # reverseSync.enable = true;
      # allowExternalGpu = false;
      amdgpuBusId = "PCI:5:0:0";
      nvidiaBusId = "PCI:1:0:0";
    };
  };

  #   hardware.graphics = {
  #     enable = true;
  #     extraPackages = with pkgs; [
  #       vaapiVdpau
  #       amdvlk
  #       libvdpau-va-gl
  #       # rocm-opencl-icd
  #       # rocm-opencl-runtime
  #       mesa
  #       vulkan-loader
  #     ];
  #   };

  environment.systemPackages = with pkgs; [
    amdgpu_top
    nvtopPackages.amd
  ];

  powerManagement.enable = true;

  # https://www.freedesktop.org/software/systemd/man/latest/sleep.conf.d.html
  #   systemd.sleep.extraConfig = ''
  #     SuspendState=mem # cat /sys/power/state for modes: freeze mem disk
  #     MemorySleepMode=s2idle #  cat /sys/power/mem_sleep for modes: s2idle deep
  #     # AllowSuspend=no
  #     AllowHibernation=no
  #     AllowHybridSleep=no
  #     AllowSuspendThenHibernate=no
  #   '';

  # radv is mesa's amd driver and replaces amdvlk/radeon
  # environment.variables.AMD_VULKAN_ICD = "RADV";
  # environment.variables.AMD_VULKAN_ICD = "AMDVLK";

  # networking.interfaces.enp3s0f0.useDHCP = true;
  # networking.interfaces.enp4s0.useDHCP = true;
  # networking.interfaces.wlp1s0.useDHCP = true;
  #networking.wireless.interfaces = ["wlp1s0"];

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  #   systemd.services.post-resume-hook = {
  #     enable = true;
  #     description = "Commands to execute after resume";
  #     wantedBy = [ "post-resume.target" ];
  #     after = [ "post-resume.target" ];
  #     script =
  #       "/run/current-system/sw/bin/light -s sysfs/leds/tpacpi::power -S 0";
  #     serviceConfig.Type = "oneshot";
  #   };

}
